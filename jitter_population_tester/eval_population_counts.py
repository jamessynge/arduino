#!/usr/bin/env python
# Evaluate the distribution of values from the TCNT1L register.
# Not expecting them to be great, but hopefully reasonably distributed.

# Conclusions: The upper 4 individual bits appear to be fairly uniform
# in terms of the numbers of zeros and ones produced. When considering
# pairs of adjacent bits grouped together to produce 4 unique values,
# it appears the results are less random according to the chi-square
# test (i.e. the counts of the unique values are less similar than
# that test expects given the hypothesis that they are independent).

import argparse
import collections
import copy
import random
import statistics

import numpy as np
from scipy import stats


def count_occurrences(hashes, num_buckets=None):
    # Turn an iterator into a list.
    if not isinstance(hashes, (list, tuple)):
        hashes = list(hashes)
    if not num_buckets:
        num_buckets = max(hashes) + 1
    buckets = [0] * num_buckets
    for h in hashes:
        buckets[h] += 1
    return buckets


class Occurrences(object):
    """Compute the counts of unique values given a set of numbers."""
    def __init__(self, samples=None, counts=None):
        if samples:
            assert not counts
            self.counts = count_occurrences(numbers)
        elif counts:
            if isinstance(counts, list):
                self.counts = counts
            else:
                self.counts = list(counts)
        else:
            raise ValueError("Can't count occurrences of nothing!")
        self.have_stats = False
        self.compute_stats()

    def add(self, other):
        # Sometimes of the counts is missing some values (i.e. if the highest
        # count wasn't produced by one of them).
        oc = other.counts
        if len(oc) > len(self.counts):
            self.counts.extend([0] * (len(oc) - len(self.counts)))
        for i in range(len(oc)):
            self.counts[i] += other.counts[i]
        self.have_stats = False

    def compute_stats(self):
        if self.have_stats:
            return
        self.mean = statistics.mean(self.counts)
        self.median = statistics.median(self.counts)
        self.var = statistics.variance(self.counts) if len(self.counts) > 1 else 0
        self.spread = max(self.counts) - min(self.counts)
        self.spread_pct = 100 * self.spread / self.mean

        np_counts = np.array(self.counts)
        self.pdr = stats.chisquare(np_counts)

    def print_summary(self):
        self.compute_stats()
        print('med=%d avg=%s var=%s p2p=%d p2p%%=%s' % (
            self.median, self.mean, self.var, self.spread, self.spread_pct))

    def print_count_table(self, num_per_row=16):
        count_strs = ["%d" % v for v in self.counts]
        max_digits = max(map(len, count_strs))
        num_rows = int((len(self.counts) + num_per_row - 1) / num_per_row)
        for r in range(num_rows):
            start = r * num_per_row
            print("[%2d]" % start, end='')
            for c in range(num_per_row):
                i = start + c
                if i >= len(self.counts):
                    break
                count_str = count_strs[i]
                print(" " * (max_digits - len(count_str)), count_str, end='')
            print()

    def print_chisquare(self):
        # self.compute_stats()
        # counts = np.array(self.counts)
        # print(counts)
        print(self.pdr)
        # chi2_stat, p_val, dof, ex = stats.chi2_contingency(counts)
        # print("P-Value=%s" % p_val)


class CounterEvaluator(object):
    def __init__(self, num_samples, samples):
        self.num_samples = num_samples
        self.samples = samples

        # Map from tuple (bit_offset, num_bits) to Occurrences
        self.bit_subset_counts = {}

        # Map from num_bits to combined Occurrences
        self.num_bits_counts = {}

    def occurrences_for_num_bits(self, num_bits):
        for bit_offset in range(33 - num_bits):
            self.eval_bit_subset(bit_offset, num_bits)
        return self.num_bits_counts[num_bits]

    def eval_bit_subset(self, bit_offset, num_bits):
        key = (bit_offset, num_bits)
        if key in self.bit_subset_counts:
            return self.bit_subset_counts[key]

        # Calculate the counts for various numbers of adjacent bits.
        numbers = bits_subset(self.samples, bit_offset, num_bits)
        occurrences = Occurrences(numbers)
        self.bit_subset_counts[(bit_offset, num_bits)] = occurrences

        if num_bits not in self.num_bits_counts:
            self.num_bits_counts[num_bits] = copy.deepcopy(occurrences)
        else:
            self.num_bits_counts[num_bits].add(occurrences)
        return occurrences

bit_range_to_pvalues = collections.defaultdict(list)
bit_range_to_spread_pct = collections.defaultdict(list)


def PrintOrderBitRangeResults():
    bit_range_to_pvalues_list = [
        (statistics.median(v), k)
        for k, v in bit_range_to_pvalues.items()
    ]
    print('Bit range to median of pvalues')
    for median, key in sorted(bit_range_to_pvalues_list):
        print(key, median)
    print('')

    bit_range_to_spread_pct_list = [
        (statistics.median(v), k)
        for k, v in bit_range_to_spread_pct.items()
    ]
    print('Bit range to median of spread_pct')
    for median, key in sorted(bit_range_to_spread_pct_list):
        print(key, median)







def RecordCounts(num_samples, counts):
    occurrences = Occurrences(counts=counts)

    print('#' * 80)
    print('Evaluating %d samples of TCNT1L' % (num_samples,))
    occurrences.print_summary()
    occurrences.print_chisquare()

    for num_bits in range(1, 9):
        print()
        mask = (1 << num_bits) - 1
        num_counts = 1 << num_bits
        print('mask=0x%x  num_counts=%d' % (mask, num_counts))
        for bit_offset in range(9 - num_bits):
            bit_range = (bit_offset, bit_offset+num_bits)
            print('Evaluating bits [%d:%d] of the samples' % bit_range)
            subset_counts = [0] * num_counts
            for i, count in enumerate(counts):
                i = (i >> bit_offset) & mask
                subset_counts[i] += count
            occurrences = Occurrences(counts=subset_counts)
            occurrences.compute_stats()
            occurrences.print_summary()
            occurrences.print_chisquare()
            if num_bits < 5:
                occurrences.print_count_table()

            lst = bit_range_to_pvalues[bit_range]
            lst.append(occurrences.pdr.pvalue)

            lst = bit_range_to_spread_pct[bit_range]
            lst.append(occurrences.spread_pct)

            print()
    print()

# ###########################################################
# # Counting 256 TCNT1L values...
# # Elapsed seconds: 4
# # Reporting population counts for 256 reads from TCNT1L.
# RecordCounts(256, [
#     1, 3, 1, 0, 1, 1, 0, 1, 0, 1, 1, 0, 3, 2, 0, 4, 
#     1, 0, 0, 1, 1, 0, 1, 0, 1, 2, 2, 0, 1, 2, 1, 1, 
#     0, 1, 1, 1, 1, 0, 0, 2, 2, 0, 1, 2, 1, 0, 1, 3, 
#     0, 0, 1, 1, 3, 2, 1, 0, 0, 1, 3, 0, 1, 1, 1, 1, 
#     0, 3, 1, 0, 1, 0, 1, 1, 1, 0, 1, 1, 2, 0, 1, 4, 
#     0, 1, 1, 0, 0, 1, 1, 0, 0, 2, 3, 0, 2, 3, 0, 1, 
#     1, 1, 0, 0, 1, 1, 0, 3, 3, 0, 3, 1, 0, 1, 2, 0, 
#     0, 0, 0, 1, 0, 5, 1, 0, 3, 1, 0, 0, 1, 2, 0, 0, 
#     1, 1, 2, 1, 0, 2, 1, 1, 1, 0, 2, 0, 0, 2, 0, 1, 
#     3, 0, 0, 1, 2, 2, 0, 0, 3, 0, 2, 0, 1, 3, 1, 1, 
#     0, 1, 1, 1, 1, 1, 1, 2, 0, 0, 3, 1, 0, 1, 0, 1, 
#     1, 1, 0, 1, 1, 2, 0, 3, 2, 1, 1, 0, 0, 0, 1, 1, 
#     1, 2, 0, 2, 0, 4, 0, 2, 1, 1, 0, 0, 1, 0, 2, 0, 
#     4, 1, 0, 3, 1, 0, 2, 1, 0, 0, 0, 1, 0, 1, 5, 0, 
#     0, 3, 1, 0, 0, 1, 2, 0, 0, 1, 1, 2, 1, 0, 2, 1, 
#     1, 1, 1, 1, 0, 1, 1, 0, 1, 3, 1, 0, 0, 3, 1, 0, 
# ])

# ###########################################################
# # Counting 1024 TCNT1L values...
# # Estimated seconds to compute: 15
# # Elapsed seconds: 16
# # Reporting population counts for 1024 reads from TCNT1L.
# RecordCounts(1024, [
#     3, 3, 6, 2, 3, 5, 6, 3, 4, 6, 2, 4, 8, 0, 2, 2, 
#     3, 10, 2, 5, 5, 0, 7, 7, 2, 1, 1, 5, 9, 3, 8, 4, 
#     1, 5, 5, 1, 3, 3, 4, 7, 5, 7, 5, 2, 3, 4, 1, 3, 
#     4, 5, 0, 6, 7, 6, 1, 5, 5, 1, 3, 1, 7, 2, 3, 7, 
#     4, 6, 7, 4, 1, 3, 4, 5, 1, 1, 8, 6, 9, 4, 2, 0, 
#     5, 6, 5, 1, 5, 3, 5, 6, 5, 3, 0, 1, 8, 5, 2, 6, 
#     4, 3, 5, 5, 4, 4, 2, 4, 5, 6, 5, 3, 1, 6, 3, 5, 
#     5, 5, 4, 3, 5, 3, 1, 0, 7, 6, 4, 5, 4, 4, 6, 4, 
#     3, 1, 3, 2, 10, 4, 7, 5, 2, 5, 3, 3, 3, 3, 4, 4, 
#     6, 6, 7, 1, 4, 3, 3, 2, 2, 4, 3, 5, 6, 5, 4, 7, 
#     2, 2, 1, 4, 4, 5, 0, 9, 4, 6, 8, 2, 2, 3, 3, 5, 
#     1, 4, 8, 7, 5, 2, 4, 2, 4, 4, 4, 3, 4, 5, 4, 5, 
#     6, 2, 0, 4, 5, 5, 5, 5, 3, 3, 5, 4, 6, 2, 2, 5, 
#     5, 4, 7, 1, 3, 4, 4, 5, 4, 5, 4, 2, 7, 2, 2, 3, 
#     5, 4, 6, 2, 8, 4, 3, 5, 3, 2, 1, 4, 7, 6, 5, 7, 
#     2, 3, 5, 3, 2, 3, 4, 3, 7, 7, 6, 1, 3, 5, 2, 1, 
# ])

# ###########################################################
# # Counting 4096 TCNT1L values...
# # Estimated seconds to compute: 61
# # Elapsed seconds: 65
# # Reporting population counts for 4096 reads from TCNT1L.
# RecordCounts(4096, [
#     9, 16, 20, 19, 16, 13, 17, 13, 11, 21, 16, 21, 15, 11, 13, 14, 
#     12, 21, 20, 16, 11, 12, 15, 8, 17, 17, 18, 17, 15, 18, 10, 18, 
#     15, 16, 24, 14, 16, 21, 17, 15, 10, 23, 17, 19, 16, 23, 14, 10, 
#     15, 17, 15, 16, 22, 17, 13, 20, 8, 16, 21, 23, 15, 19, 21, 11, 
#     16, 17, 19, 18, 14, 16, 18, 21, 17, 8, 21, 14, 11, 17, 19, 15, 
#     14, 12, 14, 12, 16, 16, 22, 18, 7, 19, 7, 10, 23, 15, 20, 14, 
#     16, 15, 16, 15, 22, 18, 18, 18, 14, 20, 18, 18, 13, 10, 15, 19, 
#     15, 17, 17, 16, 13, 10, 17, 11, 19, 20, 16, 15, 12, 15, 8, 14, 
#     17, 21, 17, 13, 14, 20, 13, 18, 17, 17, 17, 18, 19, 16, 17, 14, 
#     15, 24, 15, 15, 22, 20, 12, 13, 14, 15, 18, 20, 14, 18, 17, 17, 
#     10, 17, 19, 24, 15, 15, 21, 11, 22, 12, 19, 19, 13, 19, 19, 16, 
#     17, 11, 18, 10, 13, 15, 20, 19, 7, 15, 15, 14, 15, 21, 20, 11, 
#     12, 14, 14, 12, 22, 17, 15, 15, 17, 15, 15, 22, 19, 20, 10, 22, 
#     12, 21, 15, 21, 8, 19, 13, 11, 16, 19, 18, 15, 11, 18, 14, 7, 
#     21, 20, 18, 9, 15, 13, 8, 20, 16, 20, 15, 14, 20, 16, 14, 18, 
#     16, 20, 14, 18, 21, 16, 20, 9, 18, 21, 17, 20, 15, 16, 13, 8, 
# ])

###########################################################
# Counting 16384 TCNT1L values...
# Estimated seconds to compute: 246
# Elapsed seconds: 261
# Reporting population counts for 16384 reads from TCNT1L.
RecordCounts(16384, [
    34, 59, 53, 59, 68, 61, 68, 68, 55, 65, 59, 73, 67, 67, 67, 62, 
    45, 73, 65, 57, 68, 65, 57, 70, 74, 69, 56, 75, 72, 49, 72, 63, 
    61, 62, 62, 67, 53, 72, 70, 66, 65, 64, 72, 58, 58, 71, 63, 74, 
    54, 57, 68, 75, 81, 65, 62, 60, 58, 73, 55, 67, 69, 62, 61, 73, 
    73, 65, 59, 66, 58, 63, 57, 73, 55, 61, 70, 75, 54, 66, 70, 75, 
    71, 57, 64, 60, 65, 67, 59, 55, 63, 76, 61, 65, 77, 60, 59, 49, 
    70, 69, 67, 62, 58, 54, 55, 61, 70, 54, 59, 68, 67, 59, 68, 58, 
    60, 65, 79, 72, 61, 62, 55, 60, 55, 76, 62, 73, 57, 65, 69, 73, 
    54, 71, 82, 50, 58, 72, 54, 65, 60, 67, 65, 61, 74, 64, 63, 74, 
    64, 65, 52, 57, 70, 74, 77, 55, 55, 60, 76, 88, 68, 58, 53, 63, 
    63, 63, 69, 70, 59, 64, 81, 63, 56, 69, 65, 60, 51, 62, 76, 53, 
    79, 63, 64, 58, 66, 74, 71, 74, 61, 56, 56, 70, 55, 67, 63, 60, 
    80, 54, 68, 74, 59, 57, 51, 72, 71, 65, 53, 63, 52, 61, 57, 72, 
    60, 55, 61, 74, 64, 65, 54, 69, 69, 75, 58, 65, 58, 67, 54, 48, 
    82, 68, 73, 58, 67, 70, 55, 69, 79, 63, 56, 60, 59, 67, 60, 68, 
    56, 72, 68, 60, 74, 67, 73, 63, 55, 55, 55, 73, 83, 69, 63, 25, 
])

###########################################################
# Counting 65536 TCNT1L values...
# Estimated seconds to compute: 983
# Elapsed seconds: 1043
# Reporting population counts for 65536 reads from TCNT1L.
RecordCounts(65536, [
    131, 272, 269, 261, 233, 257, 257, 264, 245, 235, 280, 277, 276, 262, 263, 274, 
    295, 260, 230, 242, 283, 238, 244, 262, 281, 264, 249, 278, 252, 254, 268, 257, 
    241, 262, 255, 263, 244, 230, 277, 273, 227, 260, 259, 249, 222, 206, 265, 263, 
    249, 283, 237, 254, 269, 246, 253, 237, 282, 244, 216, 217, 268, 262, 234, 252, 
    270, 264, 250, 240, 276, 249, 235, 245, 258, 281, 268, 262, 241, 270, 271, 273, 
    257, 250, 230, 260, 274, 235, 283, 264, 291, 260, 263, 267, 277, 269, 229, 255, 
    262, 255, 263, 239, 270, 264, 263, 256, 285, 268, 237, 238, 265, 256, 255, 266, 
    231, 277, 297, 270, 258, 256, 296, 274, 225, 250, 256, 268, 242, 260, 267, 270, 
    268, 264, 252, 266, 237, 282, 246, 247, 236, 271, 271, 239, 232, 291, 232, 261, 
    232, 256, 266, 200, 230, 258, 277, 251, 274, 249, 265, 254, 233, 247, 241, 280, 
    232, 229, 240, 251, 254, 258, 248, 262, 262, 254, 233, 268, 249, 252, 252, 247, 
    304, 261, 247, 267, 256, 251, 276, 261, 240, 228, 280, 265, 269, 258, 272, 291, 
    251, 264, 272, 262, 257, 243, 251, 262, 254, 267, 259, 271, 234, 287, 251, 280, 
    254, 243, 241, 269, 248, 269, 256, 257, 268, 308, 256, 259, 278, 276, 244, 232, 
    238, 289, 260, 251, 245, 287, 241, 281, 277, 247, 240, 260, 280, 250, 221, 265, 
    261, 267, 241, 252, 263, 239, 253, 219, 264, 256, 226, 241, 250, 269, 259, 128, 
])

###########################################################
# Counting 262144 TCNT1L values...
# Estimated seconds to compute: 3932
# Elapsed seconds: 4170
# Reporting population counts for 262144 reads from TCNT1L.
RecordCounts(262144, [
    479, 1035, 1015, 1072, 1034, 1013, 1002, 1007, 991, 1056, 1037, 1055, 1038, 1018, 1023, 1032, 
    1023, 1057, 1031, 1060, 1007, 1066, 953, 1067, 1023, 1037, 1014, 1029, 1019, 1089, 985, 1033, 
    1065, 1004, 1027, 1056, 1040, 1014, 991, 1038, 982, 1002, 1052, 1046, 973, 1063, 1034, 1027, 
    990, 1076, 1028, 1025, 1027, 1087, 1029, 1015, 1029, 1016, 1047, 998, 1049, 995, 1002, 1040, 
    1005, 1013, 1007, 1022, 1060, 1074, 1010, 1026, 1040, 1004, 1044, 1042, 1021, 1044, 1030, 990, 
    1042, 1026, 1002, 1047, 1056, 1046, 1061, 1040, 982, 1035, 1035, 1026, 1001, 1062, 1058, 1034, 
    972, 1040, 950, 1088, 1004, 1025, 1051, 1004, 957, 1067, 1054, 1108, 948, 1012, 978, 1045, 
    1001, 1074, 1039, 1051, 976, 1081, 1036, 1038, 1018, 1018, 1058, 1027, 1024, 1041, 995, 1075, 
    994, 1009, 1060, 1038, 1027, 1051, 999, 1073, 1017, 977, 1060, 1052, 995, 1051, 1005, 990, 
    966, 1025, 1061, 1058, 975, 1100, 990, 1045, 1013, 1040, 1059, 1021, 1056, 1063, 1050, 1012, 
    969, 1012, 1027, 1000, 1034, 1043, 1023, 997, 1052, 986, 1017, 1088, 1009, 1064, 1021, 1016, 
    1006, 1047, 1022, 1056, 1036, 1044, 982, 1060, 969, 1044, 1050, 1087, 1005, 1024, 1058, 1047, 
    992, 1072, 982, 1028, 1026, 1004, 1084, 1008, 1002, 1016, 1017, 1062, 966, 1080, 963, 1037, 
    1035, 1062, 1044, 1008, 1004, 1023, 995, 1024, 1042, 1064, 1022, 1004, 1050, 1091, 1007, 1024, 
    1011, 1011, 1059, 1059, 1003, 1037, 1028, 1027, 1004, 1038, 1010, 1088, 1018, 1035, 1019, 1041, 
    987, 1022, 1062, 1042, 996, 1026, 991, 994, 991, 1076, 1046, 1043, 1015, 1064, 1035, 494, 
])

# ###########################################################
# # Counting 1024 TCNT1L values...
# # Elapsed seconds: 16
# # Reporting population counts for 1024 reads from TCNT1L.
# RecordCounts(1024, [
#     1, 7, 2, 3, 3, 6, 5, 1, 6, 3, 2, 3, 4, 5, 4, 5, 
#     4, 3, 6, 3, 3, 3, 4, 4, 4, 6, 3, 5, 5, 5, 1, 5, 
#     8, 4, 4, 3, 1, 7, 4, 1, 3, 7, 7, 5, 1, 5, 5, 0, 
#     4, 3, 2, 6, 7, 6, 3, 3, 3, 1, 7, 3, 2, 3, 10, 6, 
#     2, 2, 7, 3, 1, 4, 3, 9, 4, 3, 1, 7, 6, 2, 5, 5, 
#     6, 2, 4, 4, 1, 4, 6, 4, 2, 6, 5, 4, 2, 6, 1, 4, 
#     4, 4, 3, 9, 2, 3, 2, 4, 5, 4, 5, 3, 2, 6, 5, 2, 
#     8, 1, 0, 5, 3, 4, 4, 6, 6, 2, 5, 4, 3, 3, 4, 5, 
#     1, 7, 5, 5, 3, 4, 4, 7, 5, 3, 1, 6, 6, 2, 3, 2, 
#     6, 6, 6, 3, 5, 3, 4, 0, 3, 4, 4, 5, 4, 7, 4, 2, 
#     4, 3, 5, 3, 3, 4, 7, 4, 4, 8, 3, 2, 1, 6, 6, 4, 
#     4, 3, 3, 7, 2, 3, 5, 8, 4, 3, 5, 1, 2, 6, 4, 4, 
#     2, 8, 1, 5, 2, 7, 2, 4, 5, 2, 3, 9, 1, 4, 1, 7, 
#     1, 8, 2, 4, 2, 8, 2, 3, 7, 3, 2, 2, 4, 5, 3, 7, 
#     6, 2, 4, 5, 2, 3, 6, 4, 2, 8, 3, 4, 1, 3, 11, 2, 
#     7, 2, 2, 6, 5, 2, 4, 4, 4, 5, 4, 6, 4, 4, 3, 0, 
# ])

# ###########################################################
# # Counting 2048 TCNT1L values...
# # Estimated seconds to compute: 33
# # Elapsed seconds: 33
# # Reporting population counts for 2048 reads from TCNT1L.
# RecordCounts(2048, [
#     6, 9, 6, 6, 10, 5, 10, 6, 8, 8, 10, 8, 6, 7, 8, 8, 
#     9, 7, 9, 10, 5, 9, 7, 7, 7, 11, 10, 8, 10, 6, 11, 7, 
#     8, 7, 8, 12, 5, 10, 9, 9, 11, 4, 5, 7, 8, 11, 3, 10, 
#     11, 10, 6, 7, 5, 4, 9, 9, 10, 11, 7, 6, 10, 5, 7, 7, 
#     8, 12, 8, 8, 7, 13, 8, 8, 6, 7, 11, 4, 9, 12, 10, 6, 
#     9, 8, 5, 10, 9, 8, 7, 9, 8, 7, 8, 4, 6, 12, 8, 7, 
#     13, 5, 5, 9, 9, 6, 8, 5, 15, 8, 6, 5, 11, 6, 9, 6, 
#     8, 10, 7, 7, 7, 9, 8, 7, 9, 7, 9, 7, 10, 7, 7, 6, 
#     11, 9, 9, 13, 6, 6, 10, 8, 10, 5, 8, 10, 5, 10, 8, 12, 
#     9, 5, 5, 6, 9, 9, 6, 11, 9, 10, 4, 9, 6, 4, 6, 12, 
#     9, 13, 1, 10, 10, 5, 8, 7, 9, 11, 8, 7, 9, 11, 12, 3, 
#     7, 10, 6, 9, 10, 9, 8, 8, 7, 9, 4, 12, 5, 9, 11, 4, 
#     13, 5, 7, 4, 9, 8, 12, 11, 5, 7, 6, 8, 9, 6, 7, 8, 
#     13, 8, 6, 5, 13, 1, 10, 8, 5, 13, 7, 8, 8, 6, 9, 5, 
#     11, 9, 4, 12, 10, 6, 6, 8, 8, 11, 11, 7, 9, 8, 10, 10, 
#     4, 9, 5, 12, 5, 8, 10, 15, 7, 1, 7, 8, 7, 8, 9, 4, 
# ])

# ###########################################################
# # Counting 4096 TCNT1L values...
# # Estimated seconds to compute: 66
# # Elapsed seconds: 65
# # Reporting population counts for 4096 reads from TCNT1L.
# RecordCounts(4096, [
#     9, 16, 19, 13, 15, 18, 18, 17, 20, 11, 20, 18, 15, 14, 12, 18, 
#     23, 11, 16, 18, 21, 12, 13, 19, 17, 18, 18, 15, 11, 24, 9, 14, 
#     17, 11, 24, 14, 12, 16, 18, 13, 9, 20, 17, 19, 16, 10, 15, 19, 
#     19, 11, 20, 14, 19, 18, 14, 13, 20, 16, 14, 11, 18, 22, 16, 13, 
#     13, 14, 20, 9, 17, 10, 27, 11, 11, 18, 14, 23, 11, 18, 15, 18, 
#     20, 13, 12, 18, 22, 15, 12, 19, 19, 17, 10, 18, 12, 21, 17, 15, 
#     20, 15, 16, 21, 13, 13, 20, 19, 13, 18, 20, 11, 17, 16, 19, 18, 
#     19, 13, 17, 18, 13, 13, 21, 15, 16, 13, 23, 13, 17, 13, 21, 12, 
#     17, 23, 14, 14, 16, 14, 12, 17, 14, 13, 28, 9, 13, 18, 13, 11, 
#     14, 23, 14, 19, 17, 13, 15, 21, 16, 14, 12, 22, 16, 18, 12, 14, 
#     18, 19, 9, 14, 18, 19, 17, 16, 12, 10, 22, 14, 10, 20, 19, 12, 
#     16, 16, 15, 21, 14, 10, 20, 23, 17, 12, 16, 17, 16, 16, 14, 17, 
#     18, 18, 17, 11, 12, 25, 15, 12, 24, 13, 19, 16, 16, 16, 23, 10, 
#     15, 22, 14, 13, 17, 17, 18, 18, 15, 16, 17, 15, 13, 19, 16, 15, 
#     21, 14, 17, 12, 22, 14, 18, 14, 16, 20, 14, 13, 15, 18, 11, 14, 
#     17, 16, 24, 11, 12, 17, 13, 14, 12, 23, 13, 21, 14, 16, 12, 13, 
# ])

# ###########################################################
# # Counting 8192 TCNT1L values...
# # Estimated seconds to compute: 131
# # Elapsed seconds: 130
# # Reporting population counts for 8192 reads from TCNT1L.
# RecordCounts(8192, [
#     15, 37, 31, 29, 22, 35, 30, 38, 31, 30, 27, 38, 35, 42, 36, 33, 
#     34, 26, 27, 28, 37, 29, 31, 40, 29, 26, 23, 41, 28, 32, 34, 31, 
#     30, 35, 30, 30, 41, 38, 37, 27, 34, 39, 29, 39, 26, 38, 31, 28, 
#     28, 26, 29, 33, 27, 34, 26, 36, 26, 28, 35, 30, 31, 43, 29, 36, 
#     35, 35, 38, 30, 29, 41, 32, 29, 25, 34, 39, 25, 38, 27, 25, 35, 
#     32, 33, 31, 31, 29, 32, 26, 30, 34, 42, 42, 35, 38, 27, 22, 30, 
#     43, 29, 33, 31, 21, 30, 39, 32, 32, 40, 24, 26, 34, 29, 30, 38, 
#     35, 28, 37, 38, 39, 28, 38, 24, 36, 29, 25, 31, 35, 31, 42, 24, 
#     31, 24, 35, 32, 28, 37, 36, 31, 28, 33, 33, 36, 42, 31, 38, 31, 
#     30, 34, 35, 32, 28, 39, 25, 24, 30, 28, 27, 32, 35, 35, 24, 30, 
#     26, 31, 36, 36, 38, 38, 33, 37, 32, 32, 31, 37, 35, 33, 26, 27, 
#     34, 34, 27, 37, 33, 24, 29, 31, 31, 43, 21, 35, 29, 31, 31, 39, 
#     43, 35, 37, 32, 26, 24, 37, 30, 35, 37, 28, 23, 31, 29, 39, 31, 
#     37, 27, 26, 27, 37, 23, 47, 33, 39, 32, 36, 31, 32, 32, 31, 35, 
#     27, 28, 29, 40, 26, 35, 30, 26, 30, 30, 34, 34, 38, 35, 29, 30, 
#     34, 27, 44, 36, 40, 33, 30, 28, 33, 27, 38, 28, 34, 26, 30, 14, 
# ])

###########################################################
# Counting 16384 TCNT1L values...
# Estimated seconds to compute: 262
# Elapsed seconds: 261
# Reporting population counts for 16384 reads from TCNT1L.
RecordCounts(16384, [
    33, 47, 60, 80, 75, 62, 73, 62, 70, 56, 60, 64, 62, 72, 58, 56, 
    61, 67, 51, 76, 78, 51, 51, 73, 57, 78, 72, 65, 64, 61, 59, 74, 
    58, 61, 51, 83, 70, 60, 58, 59, 68, 70, 57, 68, 73, 57, 59, 60, 
    57, 69, 69, 74, 75, 71, 56, 69, 54, 63, 59, 55, 82, 69, 62, 57, 
    69, 64, 57, 73, 64, 61, 65, 60, 55, 79, 65, 56, 71, 74, 65, 73, 
    56, 55, 54, 76, 64, 71, 55, 60, 62, 59, 57, 71, 70, 62, 66, 54, 
    81, 58, 65, 63, 81, 62, 62, 47, 55, 61, 72, 80, 68, 72, 57, 71, 
    62, 53, 64, 54, 79, 62, 58, 56, 64, 62, 67, 69, 59, 53, 70, 72, 
    75, 63, 60, 77, 55, 50, 69, 71, 60, 67, 60, 74, 66, 61, 65, 57, 
    73, 55, 60, 69, 71, 57, 57, 71, 67, 65, 65, 80, 69, 63, 65, 57, 
    55, 58, 55, 83, 68, 69, 57, 61, 67, 65, 65, 65, 59, 65, 56, 67, 
    64, 76, 67, 64, 72, 54, 77, 55, 59, 61, 61, 73, 75, 53, 55, 66, 
    57, 61, 55, 81, 67, 70, 63, 59, 63, 62, 70, 65, 69, 61, 58, 67, 
    45, 75, 69, 83, 61, 61, 66, 64, 58, 51, 62, 69, 70, 54, 68, 63, 
    61, 58, 77, 60, 53, 80, 68, 68, 66, 62, 67, 59, 58, 59, 67, 75, 
    52, 69, 67, 69, 64, 64, 58, 62, 66, 57, 63, 78, 64, 61, 67, 34, 
])

###########################################################
# Counting 32768 TCNT1L values...
# Estimated seconds to compute: 524
# Elapsed seconds: 517
# Reporting population counts for 32768 reads from TCNT1L.
RecordCounts(32768, [
    66, 116, 119, 136, 134, 133, 136, 141, 109, 117, 122, 124, 124, 146, 120, 139, 
    123, 120, 109, 128, 158, 124, 132, 129, 129, 125, 122, 117, 132, 133, 129, 133, 
    127, 123, 134, 127, 137, 125, 116, 147, 117, 125, 131, 113, 132, 129, 125, 123, 
    125, 124, 126, 137, 137, 119, 121, 131, 120, 137, 105, 130, 141, 118, 136, 115, 
    125, 139, 126, 128, 123, 142, 129, 130, 122, 119, 127, 151, 122, 128, 114, 119, 
    144, 130, 116, 150, 130, 127, 110, 127, 119, 132, 136, 148, 116, 132, 112, 113, 
    122, 144, 128, 140, 126, 126, 119, 146, 104, 118, 122, 130, 143, 141, 129, 133, 
    108, 122, 124, 115, 146, 129, 126, 128, 133, 116, 113, 140, 143, 131, 132, 125, 
    127, 106, 135, 128, 124, 137, 137, 133, 123, 120, 133, 132, 139, 109, 132, 135, 
    113, 134, 132, 97, 148, 123, 130, 120, 120, 130, 135, 134, 127, 115, 126, 136, 
    126, 126, 102, 143, 127, 130, 122, 127, 122, 148, 116, 127, 136, 131, 133, 124, 
    113, 141, 129, 142, 120, 119, 124, 126, 137, 127, 140, 124, 132, 115, 130, 116, 
    124, 128, 135, 146, 128, 114, 119, 109, 142, 143, 128, 128, 107, 153, 125, 140, 
    94, 131, 114, 124, 155, 132, 125, 130, 118, 121, 128, 110, 152, 125, 128, 134, 
    125, 113, 125, 139, 139, 129, 139, 110, 120, 129, 124, 129, 137, 132, 136, 134, 
    103, 138, 133, 135, 120, 122, 122, 129, 134, 122, 112, 130, 134, 139, 114, 65, 
])

###########################################################
# Counting 65536 TCNT1L values...
# Estimated seconds to compute: 1049
# Elapsed seconds: 1042
# Reporting population counts for 65536 reads from TCNT1L.
RecordCounts(65536, [
    131, 256, 273, 267, 244, 277, 247, 262, 240, 253, 256, 264, 291, 271, 269, 258, 
    243, 230, 238, 264, 280, 264, 233, 263, 240, 259, 243, 252, 249, 264, 259, 241, 
    266, 283, 256, 253, 246, 279, 231, 237, 244, 264, 253, 282, 254, 294, 265, 228, 
    234, 263, 260, 263, 252, 287, 229, 261, 242, 252, 261, 286, 251, 283, 252, 240, 
    240, 235, 266, 276, 247, 256, 241, 290, 261, 247, 265, 244, 250, 245, 251, 261, 
    237, 242, 248, 289, 273, 248, 256, 239, 252, 256, 247, 284, 263, 292, 248, 240, 
    250, 247, 265, 271, 269, 261, 263, 268, 254, 234, 289, 264, 256, 271, 252, 263, 
    219, 251, 271, 277, 266, 293, 267, 237, 213, 260, 247, 262, 262, 257, 249, 247, 
    263, 252, 254, 257, 249, 277, 243, 256, 247, 272, 244, 286, 242, 241, 246, 242, 
    273, 266, 264, 253, 264, 288, 267, 202, 225, 286, 252, 284, 251, 270, 243, 270, 
    253, 241, 247, 286, 257, 286, 237, 233, 248, 257, 256, 256, 257, 259, 260, 282, 
    230, 254, 262, 263, 249, 260, 219, 257, 224, 257, 289, 259, 283, 265, 233, 260, 
    235, 258, 257, 279, 290, 271, 224, 237, 263, 266, 257, 281, 253, 282, 251, 264, 
    234, 255, 288, 264, 258, 272, 239, 252, 231, 249, 278, 269, 299, 281, 227, 240, 
    232, 244, 255, 247, 280, 247, 235, 283, 239, 278, 246, 263, 253, 264, 239, 269, 
    230, 270, 255, 284, 254, 224, 245, 282, 248, 259, 263, 240, 300, 251, 263, 106, 
])

###########################################################
# Counting 131072 TCNT1L values...
# Estimated seconds to compute: 2097
# Elapsed seconds: 2085
# Reporting population counts for 131072 reads from TCNT1L.
RecordCounts(131072, [
    235, 500, 531, 521, 554, 511, 541, 523, 481, 542, 495, 553, 531, 507, 517, 525, 
    503, 533, 514, 542, 499, 505, 513, 508, 502, 485, 511, 509, 537, 499, 484, 530, 
    524, 490, 496, 539, 480, 541, 504, 500, 519, 525, 482, 516, 532, 552, 506, 499, 
    451, 497, 532, 542, 563, 508, 511, 469, 498, 501, 519, 576, 492, 487, 483, 543, 
    506, 503, 534, 508, 488, 525, 491, 528, 513, 501, 505, 500, 548, 495, 480, 507, 
    514, 517, 484, 549, 506, 541, 533, 502, 493, 518, 542, 514, 539, 524, 511, 527, 
    502, 549, 494, 548, 510, 532, 514, 477, 511, 506, 529, 548, 520, 518, 530, 521, 
    509, 520, 539, 494, 554, 508, 491, 533, 538, 525, 493, 509, 504, 547, 471, 484, 
    498, 528, 511, 540, 529, 452, 512, 519, 513, 522, 514, 497, 472, 560, 496, 507, 
    544, 507, 477, 524, 554, 525, 501, 462, 462, 557, 538, 549, 514, 498, 490, 489, 
    508, 507, 583, 512, 457, 511, 504, 554, 484, 519, 515, 471, 553, 476, 531, 534, 
    507, 471, 515, 544, 492, 503, 461, 535, 512, 521, 510, 562, 484, 542, 493, 516, 
    512, 550, 517, 545, 517, 512, 505, 539, 490, 522, 548, 514, 510, 543, 485, 511, 
    520, 521, 507, 555, 497, 531, 531, 528, 490, 541, 519, 513, 547, 489, 548, 501, 
    537, 470, 504, 531, 504, 512, 473, 533, 502, 512, 507, 541, 482, 490, 502, 549, 
    497, 540, 469, 500, 506, 574, 489, 509, 519, 504, 456, 568, 523, 544, 501, 226, 
])

###########################################################
# Counting 262144 TCNT1L values...
# Estimated seconds to compute: 4194
# Elapsed seconds: 4169
# Reporting population counts for 262144 reads from TCNT1L.
RecordCounts(262144, [
    495, 994, 1047, 1038, 1034, 1027, 1055, 1035, 1014, 1057, 1009, 1030, 984, 1023, 1026, 1048, 
    998, 1077, 1049, 1028, 1018, 1037, 989, 1015, 1008, 1058, 1064, 1021, 1013, 1056, 1026, 1024, 
    1023, 981, 1051, 1019, 981, 1081, 1011, 1053, 983, 1080, 1003, 1084, 952, 1109, 981, 1027, 
    996, 1016, 1042, 1020, 1106, 1061, 1025, 1066, 955, 1048, 1004, 1039, 975, 1043, 1051, 1036, 
    1071, 975, 1033, 1054, 1016, 1041, 979, 1028, 982, 1081, 1001, 1051, 1005, 1053, 1052, 1029, 
    1037, 999, 1018, 1031, 1000, 1041, 1070, 1004, 1035, 1088, 1002, 1032, 972, 1036, 1006, 1068, 
    977, 1045, 1045, 1066, 1045, 1018, 1016, 1035, 956, 978, 1047, 1054, 1054, 1014, 1054, 1018, 
    1026, 1058, 1031, 1016, 1010, 1025, 1002, 1026, 1062, 1028, 1027, 1072, 997, 1047, 1006, 1005, 
    1015, 1050, 1028, 1027, 1006, 1096, 986, 1054, 1009, 1035, 1022, 1003, 989, 1015, 1074, 1059, 
    1005, 1020, 1068, 1017, 1023, 1103, 947, 1029, 1022, 1021, 1020, 1047, 1021, 1099, 1081, 1010, 
    978, 1052, 1030, 975, 991, 1048, 1034, 1050, 1019, 1030, 1034, 1015, 1050, 1047, 1012, 979, 
    1018, 1045, 999, 1097, 978, 1056, 1054, 1037, 1023, 1037, 983, 993, 1070, 1053, 1025, 999, 
    1015, 1068, 1054, 1030, 1016, 983, 999, 1040, 990, 1084, 1008, 1096, 1012, 1054, 1026, 997, 
    991, 1007, 1003, 1037, 1073, 1049, 1019, 989, 1032, 1072, 1046, 1003, 1004, 1026, 1005, 1038, 
    1090, 984, 1042, 1060, 1017, 1053, 986, 1003, 1020, 1019, 1043, 1067, 1004, 1020, 1032, 1052, 
    1020, 1041, 982, 1002, 1008, 1071, 966, 1080, 1084, 1044, 988, 1035, 1019, 1069, 1012, 504, 
])

###########################################################
# Counting 524288 TCNT1L values...
# Estimated seconds to compute: 8389
# Elapsed seconds: 8336
# Reporting population counts for 524288 reads from TCNT1L.
RecordCounts(524288, [
    967, 2091, 2036, 2054, 2075, 2098, 2074, 2127, 2003, 2132, 1984, 2096, 2007, 2046, 2011, 2057, 
    2043, 2035, 2052, 2124, 2100, 2166, 1998, 2080, 2029, 2026, 2037, 2066, 1976, 2082, 2063, 2033, 
    2030, 2074, 1959, 2139, 2088, 2138, 2074, 2095, 2026, 2021, 1928, 2053, 2031, 2074, 2071, 2174, 
    1939, 2045, 1989, 2103, 2170, 2052, 2057, 2051, 2072, 2037, 2015, 2105, 2025, 2062, 2005, 1972, 
    2059, 2050, 2044, 2088, 2097, 2158, 2018, 2091, 2035, 2087, 1994, 2077, 2020, 2047, 1992, 2047, 
    2021, 2093, 2005, 2098, 2123, 2107, 2117, 2061, 2006, 2017, 2077, 2061, 2018, 2010, 2046, 2068, 
    2061, 2089, 2076, 2090, 2069, 2074, 1996, 2127, 2029, 2008, 2038, 2027, 2075, 2080, 2116, 2025, 
    2136, 2090, 2045, 2091, 1981, 2001, 2094, 1994, 1970, 2147, 2028, 2005, 2113, 2186, 2116, 2025, 
    2021, 2055, 2055, 2047, 2024, 2028, 2016, 2038, 2086, 2057, 2013, 1980, 2100, 2134, 2142, 2129, 
    2049, 2003, 2016, 1978, 2043, 2030, 2110, 2110, 2031, 2029, 1970, 2059, 2078, 2102, 2067, 2073, 
    2067, 2073, 2032, 2049, 2079, 2051, 2007, 2013, 2042, 2024, 2050, 2092, 2045, 2065, 2147, 2062, 
    2091, 2043, 2075, 2019, 2028, 2065, 2005, 2006, 2018, 2065, 2004, 2112, 2080, 2138, 2077, 2164, 
    1981, 2099, 1978, 2006, 2117, 2021, 2010, 2104, 2009, 2094, 2057, 2115, 2056, 2093, 2008, 2035, 
    2119, 2038, 1993, 2029, 2044, 2082, 2071, 2102, 2071, 2142, 2096, 1985, 2095, 2061, 1958, 2047, 
    1991, 2052, 2071, 2008, 2055, 2125, 2109, 2158, 2018, 2020, 2093, 2056, 2000, 2045, 2076, 1996, 
    2029, 2064, 2098, 1960, 2030, 2092, 2150, 2095, 2084, 2102, 1961, 2057, 1998, 1971, 2112, 1059, 
])

###########################################################
# Counting 1048576 TCNT1L values...
# Estimated seconds to compute: 16777
# Elapsed seconds: 16669
# Reporting population counts for 1048576 reads from TCNT1L.
RecordCounts(1048576, [
    2000, 4257, 4077, 4051, 4152, 4223, 3942, 4055, 4149, 4074, 4134, 4205, 3998, 4236, 4039, 4169, 
    4030, 4115, 4089, 4138, 4052, 4252, 4192, 4129, 4097, 4066, 4087, 4041, 3996, 4231, 4068, 4139, 
    4118, 4079, 4094, 4164, 4137, 4195, 4066, 4160, 4077, 4035, 4086, 4222, 4173, 4060, 4053, 4083, 
    4046, 4126, 4062, 4181, 4169, 4194, 4095, 4207, 4033, 4198, 4010, 4071, 4052, 4086, 4104, 4240, 
    4018, 4159, 4052, 4162, 4105, 4179, 4111, 4119, 4104, 4082, 4095, 4169, 4129, 4204, 4014, 4063, 
    3947, 4175, 4071, 4113, 4271, 4179, 4007, 4216, 4034, 4109, 4077, 4152, 4097, 4123, 4105, 4143, 
    4094, 4096, 4165, 4075, 3999, 4229, 4076, 4045, 4137, 4191, 4031, 4186, 4145, 4098, 4198, 4089, 
    3965, 4086, 4090, 4137, 4155, 4115, 4111, 4216, 3974, 4212, 4005, 4163, 4057, 4196, 4006, 4264, 
    4167, 4190, 3981, 4192, 3972, 4019, 4043, 4242, 4050, 4139, 4095, 4115, 4104, 4181, 4192, 4070, 
    4130, 4154, 4036, 3992, 4217, 4125, 4221, 4076, 3999, 4119, 4047, 4103, 4110, 4226, 4148, 4182, 
    4082, 4149, 4013, 4260, 3957, 4087, 4060, 4094, 4097, 4138, 4107, 4190, 4031, 4232, 4092, 4189, 
    3964, 4223, 4093, 4031, 4142, 4157, 4163, 4167, 4049, 4030, 4025, 4126, 4068, 4184, 4222, 4111, 
    4006, 4229, 4124, 4065, 4106, 4122, 4043, 4158, 4057, 4196, 4037, 4148, 4128, 4102, 4068, 4198, 
    4022, 4047, 4158, 4177, 4026, 4134, 4188, 4182, 4098, 4113, 4026, 4059, 4056, 4170, 4113, 4160, 
    4169, 4082, 4033, 4212, 4014, 4171, 4037, 4206, 4114, 4165, 4093, 4230, 3991, 4154, 3949, 4175, 
    3966, 4260, 4073, 4029, 4099, 4182, 4150, 4240, 4086, 4095, 4090, 4132, 4018, 4086, 4162, 2078, 
])

###########################################################
# Counting 2097152 TCNT1L values...
# Estimated seconds to compute: 33554
# Elapsed seconds: 33341
# Reporting population counts for 2097152 reads from TCNT1L.
RecordCounts(2097152, [
    4153, 8212, 8259, 8289, 8025, 8346, 8144, 8232, 8109, 8385, 8259, 8298, 8175, 8309, 8159, 8295, 
    8150, 8215, 8206, 8269, 8237, 8162, 8127, 8207, 8171, 8334, 8277, 8202, 8244, 8412, 8130, 8254, 
    8207, 8244, 8216, 8200, 8187, 8139, 8170, 8238, 8126, 8278, 8236, 8319, 8171, 8258, 8229, 8343, 
    8171, 8241, 8179, 8135, 8193, 8243, 8155, 8285, 8171, 8222, 8170, 8295, 8179, 8236, 8327, 8348, 
    8089, 8281, 8144, 8296, 8074, 8217, 8114, 8352, 8098, 8278, 8203, 8266, 8197, 8390, 8075, 8387, 
    8262, 8279, 8114, 8283, 8056, 8171, 8288, 8235, 8242, 8273, 8180, 8234, 8200, 8261, 8129, 8391, 
    8177, 8308, 8225, 8312, 8117, 8234, 8065, 8307, 8174, 8411, 8115, 8252, 8220, 8246, 8250, 8172, 
    8078, 8312, 8225, 8346, 8236, 8417, 7950, 8410, 8215, 8134, 8316, 8202, 8222, 8184, 8161, 8182, 
    8090, 8352, 8183, 8220, 8244, 8353, 8310, 8225, 8156, 8168, 8279, 8307, 8120, 8174, 8145, 8341, 
    8074, 8119, 8251, 8394, 8137, 8300, 8145, 8377, 8094, 8439, 8159, 8198, 8096, 8254, 8189, 8161, 
    8090, 8435, 8141, 8185, 8217, 8267, 8262, 8366, 8238, 8238, 8078, 8286, 8115, 8307, 8083, 8309, 
    8062, 8322, 8053, 8430, 8167, 8269, 8219, 8235, 8268, 8432, 8156, 8269, 8096, 8180, 8132, 8306, 
    8108, 8336, 8108, 8417, 8124, 8276, 8142, 8311, 8098, 8286, 8302, 8349, 8216, 8237, 8146, 8112, 
    8203, 8401, 8171, 8315, 8164, 8261, 8137, 8258, 8138, 8235, 8054, 8369, 8279, 8355, 8261, 8189, 
    8164, 8357, 8234, 8222, 8159, 8252, 8139, 8245, 8174, 8222, 8175, 8207, 8138, 8373, 8260, 8316, 
    8203, 8273, 8068, 8311, 8233, 8202, 8104, 8334, 8077, 8204, 8060, 8329, 8268, 8316, 8138, 4179, 
])

###########################################################
# Counting 4194304 TCNT1L values...
# Estimated seconds to compute: 67109
# Elapsed seconds: 66687
# Reporting population counts for 4194304 reads from TCNT1L.
RecordCounts(4194304, [
    8142, 16638, 16460, 16636, 16359, 16422, 16123, 16687, 16078, 16435, 16467, 16581, 16453, 16589, 16425, 16631, 
    16175, 16555, 16349, 16605, 16318, 16766, 16240, 16476, 16134, 16563, 16487, 16541, 16242, 16705, 16209, 16765, 
    16334, 16612, 16300, 16488, 16355, 16420, 16352, 16630, 16331, 16631, 16180, 16525, 16461, 16583, 16438, 16479, 
    16443, 16622, 16096, 16639, 16338, 16677, 16172, 16346, 16309, 16822, 16266, 16625, 16439, 16499, 16269, 16601, 
    16273, 16545, 16462, 16613, 16148, 16586, 16364, 16463, 16356, 16723, 16231, 16623, 16373, 16762, 16125, 16563, 
    16338, 16607, 16210, 16426, 16309, 16670, 16485, 16471, 16312, 16607, 16210, 16646, 16407, 16800, 16323, 16715, 
    16089, 16383, 16287, 16440, 16267, 16389, 16488, 16754, 16330, 16676, 16282, 16758, 16261, 16748, 16128, 16527, 
    16164, 16525, 16227, 16676, 16357, 16518, 16456, 16611, 16357, 16491, 16339, 16554, 16413, 16630, 16400, 16575, 
    16211, 16507, 16106, 16655, 16431, 16497, 16498, 16387, 16456, 16639, 16415, 16493, 16272, 16537, 16350, 16447, 
    16343, 16559, 16525, 16415, 16189, 16676, 16498, 16642, 16139, 16583, 16381, 16720, 16073, 16670, 16394, 16291, 
    16196, 16535, 16423, 16902, 16320, 16563, 16212, 16731, 16306, 16405, 16384, 16532, 16405, 16512, 16153, 16831, 
    16210, 16570, 16369, 16570, 16346, 16759, 16288, 16593, 16169, 16550, 16620, 16327, 16032, 16630, 16387, 16655, 
    16296, 16580, 16418, 16549, 16162, 16811, 16517, 16690, 16277, 16333, 16218, 16389, 16276, 16434, 16403, 16638, 
    16469, 16574, 16384, 16742, 16258, 16640, 16306, 16689, 16079, 16346, 16327, 16631, 16323, 16655, 16209, 16606, 
    16481, 16577, 16384, 16508, 16306, 16707, 16295, 16577, 16239, 16767, 16068, 16459, 16277, 16786, 16293, 16580, 
    16200, 16520, 16601, 16720, 16270, 16447, 16251, 16544, 16218, 16627, 16277, 16736, 16258, 16496, 16445, 8293, 
])

###########################################################
# Counting 8388608 TCNT1L values...
# Estimated seconds to compute: 134218
# Elapsed seconds: 133394
# Reporting population counts for 8388608 reads from TCNT1L.
RecordCounts(8388608, [
    16378, 33248, 32692, 32783, 32647, 32932, 32697, 33073, 32461, 33286, 32469, 32893, 32619, 33459, 32593, 33322, 
    32582, 33098, 32840, 33253, 32463, 33181, 32401, 33270, 32539, 33345, 32952, 33237, 32622, 33145, 32519, 33206, 
    32608, 33309, 32588, 33151, 32695, 33000, 32353, 33203, 32366, 33163, 32815, 33562, 32272, 33528, 32982, 33037, 
    32614, 33271, 32667, 33097, 32656, 32966, 32303, 33407, 32504, 33405, 32656, 33237, 32651, 33306, 32967, 33122, 
    32293, 33288, 32469, 33411, 32171, 33472, 32497, 33002, 32615, 33267, 32738, 33121, 32814, 33140, 32920, 33062, 
    32642, 33019, 32757, 33029, 32592, 33224, 32797, 33161, 32381, 33458, 32630, 33071, 32727, 33187, 32709, 32905, 
    32608, 33098, 32437, 32748, 32722, 33155, 32589, 32983, 32769, 33347, 32430, 33170, 32688, 33020, 32372, 33289, 
    32446, 32921, 32824, 33067, 32675, 33175, 32717, 33192, 32604, 33303, 32905, 33230, 32366, 33154, 32412, 33416, 
    32596, 33252, 32613, 33137, 32845, 33219, 32429, 33188, 32652, 33245, 32647, 33212, 32726, 33000, 32656, 32787, 
    32404, 33512, 32609, 32984, 32862, 33461, 32664, 33310, 32610, 33156, 33039, 32988, 32575, 33036, 32464, 33070, 
    32449, 33420, 32783, 33300, 32539, 33322, 32705, 32919, 33017, 32956, 32406, 33407, 32616, 33174, 32456, 33163, 
    32464, 32972, 32951, 33281, 32892, 33252, 32715, 32968, 32611, 33170, 32710, 33137, 32656, 33239, 32541, 33160, 
    32437, 33198, 32613, 33169, 32662, 33422, 32383, 33122, 32538, 33296, 32403, 32676, 32775, 33076, 32612, 33092, 
    32461, 33229, 32924, 33140, 32681, 33020, 32479, 32814, 32797, 33008, 32436, 33518, 32792, 33231, 32328, 33101, 
    32470, 33438, 33127, 33421, 32390, 32906, 32597, 33204, 32494, 33202, 32728, 33282, 32498, 33214, 32796, 33161, 
    32367, 33163, 32766, 33403, 32846, 32891, 32556, 32901, 32477, 33370, 32459, 33185, 32714, 33506, 32641, 16636, 
])


















PrintOrderBitRangeResults()